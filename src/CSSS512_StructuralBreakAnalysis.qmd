---
title: "CSSS 512 Final Paper"
author: "Eddie Hock & Brandon Morande"
date: "`r Sys.time()`"
date-format: long
format: 
  pdf:
    keep-tex: true
    include-in-header:
       text: |
         \usepackage{fvextra}
         \DefineVerbatimEnvironment{Highlighting}{Verbatim}{breaklines,commandchars=\\\{\}}
include-before-body:
  text: |
    \RecustomVerbatimEnvironment{verbatim}{Verbatim}{
      showspaces = false,
      showtabs = false,
      breaksymbolleft={},
      breaklines
    }
mainfont: TimesNewRomanPSMT
monofont: PT Mono
sansfont: TimesNewRomanPSMT
---

```{r setup, echo = FALSE, include = FALSE}
knitr::opts_chunk$set(echo = FALSE, error = FALSE, warning = FALSE, message = FALSE)

# Clean Environment
rm(list=ls())

# Load packages
library(tseries)
library(lmtest)
library(urca)
library(stargazer)
library(RColorBrewer)      
library(MASS)
library(tidyverse)
library(Lahman)
```

# Load & Wrangle Data

```{r}

# Load data
data(Batting)

# Use Friendly & Murphy code to calculate OPS

Batting <- battingStats(data = Batting, 
             idvars = c("playerID", "yearID", "stint", "teamID", "lgID"),
             cbind = TRUE)

# Add columns for outcome variables

Batting <- Batting |>
  mutate(SF = ifelse(is.na(SF), 0, SF)) |>
  mutate(AVG = (H / AB),
         SR = (SO / AB),
         WR = (BB / PA)) |>
  filter(AB > 25) |>
  filter(yearID > 1919 & yearID < 2020)

# Create league-wide ts dataframe

batting_analysis <- Batting |>
  select(yearID,
         AVG,
         SR,
         HR,
         WR,
         OPS) |>
  group_by(yearID) |>
  summarize(AVG = mean(AVG),
            SR = mean(SR),
            HR = mean(HR),
            WR = mean(WR),
            OPS = mean(OPS))

# Add dummy variables for structural breaks

batting_analysis <- batting_analysis |>
  mutate("1942" = ifelse(yearID < 1942, 0,
                       ifelse(yearID >= 1942, 1, yearID)),
         "1961" = ifelse(yearID < 1961, 0,
                       ifelse(yearID >= 1961, 1, yearID)),
         "1977" = ifelse(yearID < 1977, 0,
                       ifelse(yearID >= 1977, 1, yearID)),
         "1994" = ifelse(yearID < 1994, 0,
                       ifelse(yearID >= 1994, 1, yearID)),
         "2006" = ifelse(yearID < 2006, 0,
                       ifelse(yearID >= 2006, 1, yearID)))

# Create subsets for sb analysis

batting_analysis_1942 <- batting_analysis |>
  filter(yearID < 1961)

batting_analysis_1961 <- batting_analysis |>
  filter(yearID > 1941 & yearID < 1977)

batting_analysis_1977 <- batting_analysis |>
  filter(yearID > 1960 & yearID < 1994)

batting_analysis_1994 <- batting_analysis |>
  filter(yearID > 1976 & yearID < 2006)

batting_analysis_2006 <- batting_analysis |>
  filter(yearID > 1993)
```

# Combined Outcomes Plot

```{r}
# Plot combined outcomes
Batting |>
  group_by(yearID) |>
  summarize(AVG = mean(AVG),
            SR = mean(SR),
            HRR = mean(HRR)
            ) |>
  ggplot(aes(x = yearID,
             y = AVG)) +
  geom_point(color = "blue") +
  geom_line(color = "blue") +
  geom_point(aes( x = yearID,
                  y = SR), color = "red") +
  geom_line(aes( x = yearID,
                  y = SR), color = "red") +
  geom_point(aes( x = yearID,
                  y = HRR), color = "green") +
  geom_line(aes( x = yearID,
                  y = HRR), color = "green") +
  geom_vline(xintercept = c(1942, 1961, 1977, 1994, 2006)) +
  labs(title = "Batting Outcomes by Year",
       x = "Year",
       y = "League-Wide AVG")

```

# Batting AVG Analysis
## Batting AVG Plot

```{r}

# Plot BA

Batting |>
  group_by(yearID) |>
  summarize(AVG = mean(AVG)) |>
  ggplot(aes(x=yearID,
             y= AVG)) +
  geom_point() +
  geom_line() +
  geom_vline(xintercept = c(1942, 1961, 1977, 1994, 2006), linetype = "dashed", linewidth = 1, color = "red") +
  scale_x_continuous(breaks = seq(1920, 2020, by = 10),
    labels = function(x) ifelse(x %% 20 == 0, x, "")) +
  scale_y_continuous(
  labels = scales::number_format(accuracy = 0.001)) +
  labs(title = "League-Wide Batting Average by Year",
       x = "Year",
       y = "Batting Average") +
  theme_light()
```

## Analyze Batting AVG Time Series

```{r}

# Create AVG ts
ts_AVG <- ts(batting_analysis$AVG, start = 1920, freq = 1)

# Deterministic trend for AVG
AVG_trend <- lm(ts_AVG ~ time(ts_AVG))
summary(AVG_trend)
confint(AVG_trend)

# ACF and PACF for AVG ts
acf(ts_AVG, main = "Batting Average ACF")
pacf(ts_AVG, main = "Batting Average PACF")
```

## Demean Batting AVG Time Series

```{r}

# Demean AVG by era

ts_AVG_pre1942 <- ts(ts_AVG[1:22])
ts_AVG_pre1942_demean <- ts((ts_AVG_pre1942 - mean(ts_AVG_pre1942)))
ts_AVG_pre1961 <- ts(ts_AVG[23:41])
ts_AVG_pre1961_demean <- ts((ts_AVG_pre1961 - mean(ts_AVG_pre1961)))
ts_AVG_pre1977 <- ts(ts_AVG[42:57])
ts_AVG_pre1977_demean <- ts((ts_AVG_pre1977 - mean(ts_AVG_pre1977)))
ts_AVG_pre1994 <- ts(ts_AVG[58:74])
ts_AVG_pre1994_demean <- ts((ts_AVG_pre1994 - mean(ts_AVG_pre1994)))
ts_AVG_pre2006 <- ts(ts_AVG[75:86])
ts_AVG_pre2006_demean <- ts((ts_AVG_pre2006 - mean(ts_AVG_pre2006)))
ts_AVG_pre2020 <- ts(ts_AVG[87:100])
ts_AVG_pre2020_demean <- ts((ts_AVG_pre2020 - mean(ts_AVG_pre2020)))

ts_AVG_demean <- ts(c(ts_AVG_pre1942_demean, ts_AVG_pre1961_demean, ts_AVG_pre1977_demean, ts_AVG_pre1994_demean, ts_AVG_pre2006_demean, ts_AVG_pre2020_demean), start = start(ts_AVG_pre1942_demean),  frequency = frequency(ts_AVG_pre1942_demean))

# Plot and diagnose demeaned AVG ts

plot(ts_AVG_demean, type = "line",
     ylab = "League-Wide Average",
     xlab = "Year",
     xaxt = "n",
     main = "Batting Average by Year, Demeaned")
axis(1, at = seq(1, 100, by = 4), labels = seq(1920, 2018, by = 4))
abline(reg = lm(ts_AVG_demean ~ time(ts_AVG_demean)), col = "blue")

# ACFs and PACFs for demeaned AVG ts
acf(ts_AVG_demean, main = "Batting Average ACF, Demeaned")
pacf(ts_AVG_demean, main = "Batting Average PACF, Demeaned")
```

## AVG Models

```{r}

# Testing for AVG non-stationarity

adf.test(ts_AVG)
adf.test(ts_AVG_demean)

# Create ts for AVG models

ts_1942 <- ts(batting_analysis_1942$"1942")
ts_1961 <- ts(batting_analysis_1961$"1961")
ts_1977 <- ts(batting_analysis_1977$"1977")
ts_1994 <- ts(batting_analysis_1994$"1994")
ts_2006 <- ts(batting_analysis_2006$"2006")

ts_AVG_1942 <- ts(batting_analysis_1942$AVG)
ts_AVG_1961 <- ts(batting_analysis_1961$AVG)
ts_AVG_1977 <- ts(batting_analysis_1977$AVG)
ts_AVG_1994 <- ts(batting_analysis_1994$AVG)
ts_AVG_2006 <- ts(batting_analysis_2006$AVG)

# AVG ARMA models

ar0_AVG_demean <- arima(
  ts_AVG_demean,
  order = c(0, 0, 0),
  include.mean = TRUE
  )

Box.test(ar0_AVG_demean$residuals)

ar1_AVG_demean <- arima(
  ts_AVG_demean,
  order = c(1, 0, 0),
  include.mean = TRUE
  )

Box.test(ar1_AVG_demean$residuals)

ar1_AVG_1942 <- arima(
  ts_AVG_1942,
  order = c(1, 0, 0),
  xreg = ts_1942,
  include.mean = TRUE
  )

ar1_AVG_1961 <- arima(
  ts_AVG_1961,
  order = c(1, 0, 0),
  xreg = ts_1961,
  include.mean = TRUE
  )

ar1_AVG_1977 <- arima(
  ts_AVG_1977,
  order = c(1, 0, 0),
  xreg = ts_1977,
  include.mean = TRUE
  )

ar1_AVG_1994 <- arima(
  ts_AVG_1994,
  order = c(1, 0, 0),
  xreg = ts_1994,
  include.mean = TRUE
  )

ar1_AVG_2006 <- arima(
  ts_AVG_2006,
  order = c(1, 0, 0),
  xreg = ts_2006,
  include.mean = TRUE
  )

ar_AVG_models <- list(ar1_AVG_1942, ar1_AVG_1961, ar1_AVG_1977, ar1_AVG_1994, ar1_AVG_2006)

stargazer(ar_AVG_models,
          type = "latex",
          title = "Batting Average Models",
          dep.var.labels = c("1920-1960", "1942-1976", "1961-1993", "1977-2005", "1994-2019"),
          covariate.labels = c("AR(1)", "Intercept", "1942", "1961", "1977", "1994", "2006")
          )
```

# Strikout Rate Analysis

## Strikeout Rate Plot

```{r}

# Plot SR

Batting |>
  group_by(yearID) |>
  summarize(SR = mean(SR)) |>
  ggplot(aes(x = yearID,
             y = SR)) +
  geom_point() +
  geom_line() +
  geom_vline(xintercept = c(1942, 1961, 1977, 1994, 2006), linetype = "dashed", linewidth = 1, color = "red") +
  scale_x_continuous(breaks = seq(1920, 2020, by = 10),
    labels = function(x) ifelse(x %% 20 == 0, x, "")) +
  scale_y_continuous(
  labels = scales::number_format(accuracy = 0.001),
  limits = c(0.100, 0.300)) +
  labs(title = "League-Wide Strikeout Rate by Year",
       x = "Year",
       y = "Strikeout Rate")  +
  theme_light()
```

## Analyze Strikeout Rate Time Series

```{r}

# Create SR ts

ts_SR <- ts(batting_analysis$SR, start = 1920, freq = 1)

# Deterministic trend for SR
SR_trend <- lm(ts_SR ~ time(ts_SR))
summary(SR_trend)
confint(SR_trend)

# ACFs and PACFs for SR ts

acf(ts_SR, main = "Strikeout Rate ACF")
pacf(ts_SR, main = "Strikeout Rate PACF")
```

## Demean Strikeout Rate Time Series

```{r}

# Demean SR by era

ts_SR_pre1942 <- ts(ts_SR[1:22])
ts_SR_pre1942_demean <- ts((ts_SR_pre1942 - mean(ts_SR_pre1942)))
ts_SR_pre1961 <- ts(ts_SR[23:41])
ts_SR_pre1961_demean <- ts((ts_SR_pre1961 - mean(ts_SR_pre1961)))
ts_SR_pre1977 <- ts(ts_SR[42:57])
ts_SR_pre1977_demean <- ts((ts_SR_pre1977 - mean(ts_SR_pre1977)))
ts_SR_pre1994 <- ts(ts_SR[58:74])
ts_SR_pre1994_demean <- ts((ts_SR_pre1994 - mean(ts_SR_pre1994)))
ts_SR_pre2006 <- ts(ts_SR[75:86])
ts_SR_pre2006_demean <- ts((ts_SR_pre2006 - mean(ts_SR_pre2006)))
ts_SR_pre2020 <- ts(ts_SR[87:100])
ts_SR_pre2020_demean <- ts((ts_SR_pre2020 - mean(ts_SR_pre2020)))

ts_SR_demean <- ts(c(ts_SR_pre1942_demean, ts_SR_pre1961_demean, ts_SR_pre1977_demean, ts_SR_pre1994_demean, ts_SR_pre2006_demean, ts_SR_pre2020_demean), start = start(ts_SR_pre1942_demean),  frequency = frequency(ts_SR_pre1942_demean))

# Plot and diagnose demeaned AVG ts

plot(ts_SR_demean, type = "line",
     ylab = "League-Wide Average",
     xlab = "Year",
     xaxt = "n",
     main = "Strikeout Rate by Year, Demeaned")
axis(1, at = seq(1, 100, by = 4), labels = seq(1920, 2018, by = 4))
abline(reg = lm(ts_SR_demean ~ time(ts_SR_demean)), col = "blue")

# ACFs and PACFs for demeaned AVG ts
acf(ts_SR_demean, main = "Strikout Rate ACF, Demeaned")
pacf(ts_SR_demean, main = "Strikeout Rate PACF, Demeaned")
```

## SR Models

```{r}

# Testing for SR non-stationarity

adf.test(ts_SR)
adf.test(ts_SR_demean)

# Create ts for SR models

ts_SR_1942 <- ts(batting_analysis_1942$SR)
ts_SR_1961 <- ts(batting_analysis_1961$SR)
ts_SR_1977 <- ts(batting_analysis_1977$SR)
ts_SR_1994 <- ts(batting_analysis_1994$SR)
ts_SR_2006 <- ts(batting_analysis_2006$SR)

ar0_SR_demean <- arima(
  ts_SR_demean,
  order = c(0, 0, 0),
  include.mean = TRUE
  )

Box.test(ar0_SR_demean$residuals)

ar1_SR_demean <- arima(
  ts_SR_demean,
  order = c(1, 0, 0),
  include.mean = TRUE
  )

Box.test(ar1_SR_demean$residuals)

arima010_SR <- arima(
  ts_SR_demean,
  order = c(0, 1, 0),
  include.mean = TRUE
  )

Box.test(arima010_SR$residuals)

arima110_SR <- arima(
  ts_SR_demean,
  order = c(1, 1, 0),
  include.mean = TRUE
  )

Box.test(arima110_SR$residuals)

ar1_SR_1942 <- arima(
  ts_SR_1942,
  order = c(1, 1, 0),
  xreg = ts_1942,
  include.mean = TRUE
  )

ar1_SR_1961 <- arima(
  ts_SR_1961,
  order = c(1, 1, 0),
  xreg = ts_1961,
  include.mean = TRUE
  )

ar1_SR_1977 <- arima(
  ts_SR_1977,
  order = c(1, 1, 0),
  xreg = ts_1977,
  include.mean = TRUE
  )

ar1_SR_1994 <- arima(
  ts_SR_1994,
  order = c(1, 1, 0),
  xreg = ts_1994,
  include.mean = TRUE
  )

ar1_SR_2006 <- arima(
  ts_SR_2006,
  order = c(1, 1, 0),
  xreg = ts_2006,
  include.mean = TRUE
  )

ar_SR_models <- list(ar1_SR_1942, ar1_SR_1961, ar1_SR_1977, ar1_SR_1994, ar1_SR_2006)

stargazer(ar_SR_models,
          type = "latex",
          title = "First-Differenced Strikeout Rate Models",
          dep.var.labels = c("1920-1960", "1942-1976", "1961-1993", "1977-2005", "1994-2019"),
          covariate.labels = c("AR(1)", "1942", "1961", "1977", "1994", "2006")
          )

```

# Home Run Analysis

## Home Run Plot

```{r}

# Plot HR

Batting |>
  group_by(yearID) |>
  summarize(HR = mean(HR)) |>
  ggplot(aes(x = yearID,
             y = HR)) +
  geom_point() +
  geom_line() +
  geom_vline(xintercept = c(1942, 1961, 1977, 1994, 2006), linetype = "dashed", linewidth = 1, color = "red") +
  scale_x_continuous(breaks = seq(1920, 2020, by = 10),
    labels = function(x) ifelse(x %% 20 == 0, x, "")) +
  scale_y_continuous(
  labels = scales::number_format(accuracy = 0.1)) +
  labs(title = "League-Wide Home Run Average by Year",
       x = "Year",
       y = "Home Runs") +
  theme_light()
```

## Analyze Homerun Time Series

```{r}

# Create HR ts
ts_HR <- ts(batting_analysis$HR, start = 1920, freq = 1)

# Deterministic trend for HR
HR_trend <- lm(ts_HR ~ time(ts_HR))
summary(HR_trend)
confint(HR_trend)

#ACF and PACF of HR ts
acf(ts_HR, main = "Home Runs ACF", lag.max = 30)
pacf(ts_HR, main = "Home Runs PACF", lag.max = 30)
```

## Demean Homerun Time Series

```{r}

# Demean HR by era

ts_HR_pre1942 <- ts(ts_HR[1:22])
ts_HR_pre1942_demean <- ts((ts_HR_pre1942 - mean(ts_HR_pre1942)))
ts_HR_pre1961 <- ts(ts_HR[23:41])
ts_HR_pre1961_demean <- ts((ts_HR_pre1961 - mean(ts_HR_pre1961)))
ts_HR_pre1977 <- ts(ts_HR[42:57])
ts_HR_pre1977_demean <- ts((ts_HR_pre1977 - mean(ts_HR_pre1977)))
ts_HR_pre1994 <- ts(ts_HR[58:74])
ts_HR_pre1994_demean <- ts((ts_HR_pre1994 - mean(ts_HR_pre1994)))
ts_HR_pre2006 <- ts(ts_HR[75:86])
ts_HR_pre2006_demean <- ts((ts_HR_pre2006 - mean(ts_HR_pre2006)))
ts_HR_pre2020 <- ts(ts_HR[87:100])
ts_HR_pre2020_demean <- ts((ts_HR_pre2020 - mean(ts_HR_pre2020)))

ts_HR_demean <- ts(c(ts_HR_pre1942_demean, ts_HR_pre1961_demean, ts_HR_pre1977_demean, ts_HR_pre1994_demean, ts_HR_pre2006_demean, ts_HR_pre2020_demean), start = start(ts_HR_pre1942_demean),  frequency = frequency(ts_HR_pre1942_demean))

# Plot and diagnose demeaned HR ts

plot(ts_HR_demean, type = "line",
     ylab = "League-Wide Average",
     xlab = "Year",
     xaxt = "n",
     main = "Home Runs by Year, Demeaned")
axis(1, at = seq(1, 100, by = 4), labels = seq(1920, 2018, by = 4))
abline(reg = lm(ts_HR_demean ~ time(ts_HR_demean)), col = "blue")

# ACFs and PACFs for demeaned AVG ts
acf(ts_HR_demean, main = "Home Runs ACF, Demeaned")
pacf(ts_HR_demean, main = "Home Runs PACF, Demeaned")
```

```{r}

# Testing for SR non-stationarity

adf.test(ts_HR)
adf.test(ts_HR_demean)

# Create ts for HR models

ts_HR_1942 <- ts(batting_analysis_1942$HR)
ts_HR_1961 <- ts(batting_analysis_1961$HR)
ts_HR_1977 <- ts(batting_analysis_1977$HR)
ts_HR_1994 <- ts(batting_analysis_1994$HR)
ts_HR_2006 <- ts(batting_analysis_2006$HR)

ar0_HR_demean <- arima(
  ts_HR_demean,
  order = c(0, 0, 0),
  include.mean = TRUE
  )

Box.test(ar0_HR_demean$residuals) 

ar1_HR_demean <- arima(
  ts_HR_demean,
  order = c(1, 0, 0),
  include.mean = TRUE
  )

Box.test(ar1_HR_demean$residuals) 

ar1_HR_1942 <- arima(
  ts_HR_1942,
  order = c(1, 0, 0),
  xreg = ts_1942,
  include.mean = TRUE
  )

ar1_HR_1961 <- arima(
  ts_HR_1961,
  order = c(1, 0, 0),
  xreg = ts_1961,
  include.mean = TRUE
  )

ar1_HR_1977 <- arima(
  ts_HR_1977,
  order = c(1, 0, 0),
  xreg = ts_1977,
  include.mean = TRUE
  )

ar1_HR_1994 <- arima(
  ts_HR_1994,
  order = c(1, 0, 0),
  xreg = ts_1994,
  include.mean = TRUE
  )

ar1_HR_2006 <- arima(
  ts_HR_2006,
  order = c(1, 0, 0),
  xreg = ts_2006,
  include.mean = TRUE
  )

ar_HR_models <- list(ar1_HR_1942, ar1_HR_1961, ar1_HR_1977, ar1_HR_1994, ar1_HR_2006)

stargazer(ar_HR_models,
          type = "latex",
          title = "Home Run Models",
          dep.var.labels = c("1920-1960", "1942-1976", "1961-1993", "1977-2005", "1994-2019"),
          covariate.labels = c("AR(1)", "Intercept", "1942", "1961", "1977", "1994", "2006")
          )
```


# Walk Rate Analysis
## WR Plot

```{r}

# Plot WR

Batting |>
  group_by(yearID) |>
  summarize(WR = mean(WR)) |>
  ggplot(aes(x=yearID,
             y= WR)) +
  geom_point() +
  geom_line() +
  geom_vline(xintercept = c(1942, 1961, 1977, 1994, 2006), linetype = "dashed", linewidth = 1, color = "red") +
  scale_x_continuous(breaks = seq(1920, 2020, by = 10),
    labels = function(x) ifelse(x %% 20 == 0, x, "")) +
  scale_y_continuous(
  labels = scales::number_format(accuracy = 0.001)) +
  labs(title = "League-Wide Walk Rate by Year",
       x = "Year",
       y = "Walk Rate") +
  theme_light()
```

## Analyze Walk Rate Time Series

```{r}

# Create WR ts
ts_WR <- ts(batting_analysis$WR, start = 1920, freq = 1)

# Deterministic trend for WR
WR_trend <- lm(ts_WR ~ time(ts_WR))
summary(WR_trend)
confint(WR_trend)

# ACF and PACF for WR ts
acf(ts_WR, main = "Walk Rate ACF")
pacf(ts_WR, main = "Walk Rate PACF")
```

## Demean WR Time Series

```{r}

# Demean WR by era

ts_WR_pre1942 <- ts(ts_WR[1:22])
ts_WR_pre1942_demean <- ts((ts_WR_pre1942 - mean(ts_WR_pre1942)))
ts_WR_pre1961 <- ts(ts_WR[23:41])
ts_WR_pre1961_demean <- ts((ts_WR_pre1961 - mean(ts_WR_pre1961)))
ts_WR_pre1977 <- ts(ts_WR[42:57])
ts_WR_pre1977_demean <- ts((ts_WR_pre1977 - mean(ts_WR_pre1977)))
ts_WR_pre1994 <- ts(ts_WR[58:74])
ts_WR_pre1994_demean <- ts((ts_WR_pre1994 - mean(ts_WR_pre1994)))
ts_WR_pre2006 <- ts(ts_WR[75:86])
ts_WR_pre2006_demean <- ts((ts_WR_pre2006 - mean(ts_WR_pre2006)))
ts_WR_pre2020 <- ts(ts_WR[87:100])
ts_WR_pre2020_demean <- ts((ts_WR_pre2020 - mean(ts_WR_pre2020)))

ts_WR_demean <- ts(c(ts_WR_pre1942_demean, ts_WR_pre1961_demean, ts_WR_pre1977_demean, ts_WR_pre1994_demean, ts_WR_pre2006_demean, ts_WR_pre2020_demean), start = start(ts_WR_pre1942_demean),  frequency = frequency(ts_WR_pre1942_demean))

# Plot and diagnose demeaned WR ts

plot(ts_WR_demean, type = "line",
     ylab = "League-Wide Average",
     xlab = "Year",
     xaxt = "n",
     main = "Walk Rate by Year, Demeaned")
axis(1, at = seq(1, 100, by = 4), labels = seq(1920, 2018, by = 4))
abline(reg = lm(ts_WR_demean ~ time(ts_WR_demean)), col = "blue")

# ACFs and PACFs for demeaned WR ts
acf(ts_WR_demean, main = "Walk Rate ACF, Demeaned")
pacf(ts_WR_demean, main = "Walk Rate PACF, Demeaned")
```

## WR Models

```{r}

# Testing for WR non-stationarity

adf.test(ts_WR)
adf.test(ts_WR_demean)

# Create ts for WR models

ts_WR_1942 <- ts(batting_analysis_1942$WR)
ts_WR_1961 <- ts(batting_analysis_1961$WR)
ts_WR_1977 <- ts(batting_analysis_1977$WR)
ts_WR_1994 <- ts(batting_analysis_1994$WR)
ts_WR_2006 <- ts(batting_analysis_2006$WR)

# WR ARMA models

ar0_WR_demean <- arima(
  ts_WR_demean,
  order = c(0, 0, 0),
  include.mean = TRUE
  )

Box.test(ar0_WR_demean$residuals)

ar1_WR_demean <- arima(
  ts_WR_demean,
  order = c(1, 0, 0),
  include.mean = TRUE
  )

Box.test(ar1_WR_demean$residuals)

ma1_WR_demean <- arima(
  ts_WR_demean,
  order = c(0, 1, 0),
  include.mean = TRUE
  )

Box.test(ma1_WR_demean$residuals)

ar1_WR_1942 <- arima(
  ts_WR_1942,
  order = c(1, 0, 0),
  xreg = ts_1942,
  include.mean = TRUE
  )

ar1_WR_1961 <- arima(
  ts_WR_1961,
  order = c(1, 0, 0),
  xreg = ts_1961,
  include.mean = TRUE
  )

ar1_WR_1977 <- arima(
  ts_WR_1977,
  order = c(1, 0, 0),
  xreg = ts_1977,
  include.mean = TRUE
  )

ar1_WR_1994 <- arima(
  ts_WR_1994,
  order = c(1, 0, 0),
  xreg = ts_1994,
  include.mean = TRUE
  )

ar1_WR_2006 <- arima(
  ts_WR_2006,
  order = c(1, 0, 0),
  xreg = ts_2006,
  include.mean = TRUE
  )

ar_WR_models <- list(ar1_WR_1942, ar1_WR_1961, ar1_WR_1977, ar1_WR_1994, ar1_WR_2006)

stargazer(ar_WR_models,
          type = "latex",
          title = "Walk Rate Models",
          dep.var.labels = c("1920-1960", "1942-1976", "1961-1993", "1977-2005", "1994-2019"),
          covariate.labels = c("AR(1)", "Intercept", "1942", "1961", "1977", "1994", "2006")
          )
```

# OPS Analysis
## OPS Plot

```{r}

# Plot OPS

Batting |>
  group_by(yearID) |>
  summarize(OPS = mean(OPS)) |>
  ggplot(aes(x=yearID,
             y=OPS)) +
  geom_point() +
  geom_line() +
  geom_vline(xintercept = c(1942, 1961, 1977, 1994, 2006), linetype = "dashed", linewidth = 1, color = "red") +
  scale_x_continuous(breaks = seq(1920, 2020, by = 10),
    labels = function(x) ifelse(x %% 20 == 0, x, "")) +
  scale_y_continuous(
  labels = scales::number_format(accuracy = 0.001)) +
  labs(title = "League-Wide On-Base Plus Slugging by Year",
       x = "Year",
       y = "OPS") +
  theme_light()
```

## Analyze Walk Rate Time Series

```{r}

# Create OPS ts
ts_OPS <- ts(batting_analysis$OPS, start = 1920, freq = 1)

# Deterministic trend for WR
WR_trend <- lm(ts_WR ~ time(ts_WR))
summary(WR_trend)
confint(WR_trend)

# ACF and PACF for WR ts
acf(ts_WR, main = "Walk Rate ACF")
pacf(ts_WR, main = "Walk Rate PACF")
```

## Demean WR Time Series

```{r}

# Demean WR by era

ts_WR_pre1942 <- ts(ts_WR[1:22])
ts_WR_pre1942_demean <- ts((ts_WR_pre1942 - mean(ts_WR_pre1942)))
ts_WR_pre1961 <- ts(ts_WR[23:41])
ts_WR_pre1961_demean <- ts((ts_WR_pre1961 - mean(ts_WR_pre1961)))
ts_WR_pre1977 <- ts(ts_WR[42:57])
ts_WR_pre1977_demean <- ts((ts_WR_pre1977 - mean(ts_WR_pre1977)))
ts_WR_pre1994 <- ts(ts_WR[58:74])
ts_WR_pre1994_demean <- ts((ts_WR_pre1994 - mean(ts_WR_pre1994)))
ts_WR_pre2006 <- ts(ts_WR[75:86])
ts_WR_pre2006_demean <- ts((ts_WR_pre2006 - mean(ts_WR_pre2006)))
ts_WR_pre2020 <- ts(ts_WR[87:100])
ts_WR_pre2020_demean <- ts((ts_WR_pre2020 - mean(ts_WR_pre2020)))

ts_WR_demean <- ts(c(ts_WR_pre1942_demean, ts_WR_pre1961_demean, ts_WR_pre1977_demean, ts_WR_pre1994_demean, ts_WR_pre2006_demean, ts_WR_pre2020_demean), start = start(ts_WR_pre1942_demean),  frequency = frequency(ts_WR_pre1942_demean))

# Plot and diagnose demeaned WR ts

plot(ts_WR_demean, type = "line",
     ylab = "League-Wide Average",
     xlab = "Year",
     xaxt = "n",
     main = "Walk Rate by Year, Demeaned")
axis(1, at = seq(1, 100, by = 4), labels = seq(1920, 2018, by = 4))
abline(reg = lm(ts_WR_demean ~ time(ts_WR_demean)), col = "blue")

# ACFs and PACFs for demeaned WR ts
acf(ts_WR_demean, main = "Walk Rate ACF, Demeaned")
pacf(ts_WR_demean, main = "Walk Rate PACF, Demeaned")
```

## WR Models

```{r}

# Testing for WR non-stationarity

adf.test(ts_WR)
adf.test(ts_WR_demean)

# Create ts for WR models

ts_WR_1942 <- ts(batting_analysis_1942$WR)
ts_WR_1961 <- ts(batting_analysis_1961$WR)
ts_WR_1977 <- ts(batting_analysis_1977$WR)
ts_WR_1994 <- ts(batting_analysis_1994$WR)
ts_WR_2006 <- ts(batting_analysis_2006$WR)

# WR ARMA models

ar0_WR_demean <- arima(
  ts_WR_demean,
  order = c(0, 0, 0),
  include.mean = TRUE
  )

Box.test(ar0_WR_demean$residuals)

ar1_WR_demean <- arima(
  ts_WR_demean,
  order = c(1, 0, 0),
  include.mean = TRUE
  )

Box.test(ar1_WR_demean$residuals)

ma1_WR_demean <- arima(
  ts_WR_demean,
  order = c(0, 1, 0),
  include.mean = TRUE
  )

Box.test(ma1_WR_demean$residuals)

ar1_WR_1942 <- arima(
  ts_WR_1942,
  order = c(1, 0, 0),
  xreg = ts_1942,
  include.mean = TRUE
  )

ar1_WR_1961 <- arima(
  ts_WR_1961,
  order = c(1, 0, 0),
  xreg = ts_1961,
  include.mean = TRUE
  )

ar1_WR_1977 <- arima(
  ts_WR_1977,
  order = c(1, 0, 0),
  xreg = ts_1977,
  include.mean = TRUE
  )

ar1_WR_1994 <- arima(
  ts_WR_1994,
  order = c(1, 0, 0),
  xreg = ts_1994,
  include.mean = TRUE
  )

ar1_WR_2006 <- arima(
  ts_WR_2006,
  order = c(1, 0, 0),
  xreg = ts_2006,
  include.mean = TRUE
  )

ar_WR_models <- list(ar1_WR_1942, ar1_WR_1961, ar1_WR_1977, ar1_WR_1994, ar1_WR_2006)

stargazer(ar_WR_models,
          type = "latex",
          title = "Walk Rate Models",
          dep.var.labels = c("1920-1960", "1942-1976", "1961-1993", "1977-2005", "1994-2019"),
          covariate.labels = c("AR(1)", "Intercept", "1942", "1961", "1977", "1994", "2006")
          )
```

# Appendix: R Code

```{r ref.label=knitr::all_labels(), echo=TRUE, eval=FALSE}
```
